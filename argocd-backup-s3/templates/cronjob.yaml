apiVersion: batch/v1
kind: CronJob
metadata:
  name: argocd-backup-s3
spec:
  {{ if .Values.timeZone }}
  timeZone: {{ .Values.timeZone }}
  {{ end }}
  schedule: {{ .Values.schedule | quote }}
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 2
  startingDeadlineSeconds: 90
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccount: argocd-server
          containers:
            - name: argocd-backup-s3
              image: "{.Values.image.repository}:{.Values.image.tag}"
              imagePullPolicy: {.Values.image.pullPolicy}
              envFrom:
              - secretRef:
                  name: argocd-backup-s3-secret-env-vars
              env:
              - name: ADMIN_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: argocd-initial-admin-secret
                    key: password
              command:
                - /bin/bash
                - -c
                - |
                  # ----------- ENV VAR CHECKS -----------
                  for var in ARGOCD_SERVER ADMIN_PASSWORD S3_BUCKET_NAME S3_UPLOAD_PREFIX; do
                  if [ -z "${!var}" ]; then
                    echo "ERROR: Env Var '$var' is not set. Aborting."
                    exit 1
                  fi
                  done

                  # ----------- AWS CLI CHECKS -----------
                  aws s3api head-bucket --bucket "$S3_BUCKET_NAME" || {
                    echo "ERROR: Bucket access failed, current AWS identity:"
                    aws sts get-caller-identity
                    echo "ERROR: Please fix AWS permissions or the region. Aborting..."
                    exit 1
                  } 

                  # ----------- LOGIN TO ARGOCD -----------
                  echo "Logging in to ArgoCD Server: ${ARGOCD_SERVER}"
                  argocd login ${ARGOCD_SERVER} --username admin --password ${ADMIN_PASSWORD} --plaintext || {
                      echo "ERROR: ArgoCD login failed. Make sure to use admin account password!"
                      exit 1
                  }
                  argocd context
                  argocd account get-user-info
                  export FILENAME="argocd-export-$(date +"%Y-%m-%d--%H-%M").yaml"
                  
                  # ----------- ARGOCD EXPORT -----------
                  argocd admin export > "$FILENAME"
                  echo "Export yaml file line count: $(wc -l $FILENAME)"
                  
                  # ----------- S3 UPLOAD -----------
                  echo "Uploading to  s3://${S3_BUCKET_NAME}/${S3_UPLOAD_PREFIX%/}/${FILENAME}"
                  aws s3 cp ${FILENAME} s3://${S3_BUCKET_NAME}/${S3_UPLOAD_PREFIX%/}/${FILENAME}
                  echo "Listing  s3://${S3_BUCKET_NAME}/${S3_UPLOAD_PREFIX}"
                  aws s3 ls s3://${S3_BUCKET_NAME}/${S3_UPLOAD_PREFIX}
              resources:
                limits:
                  memory: "256Mi"
                requests:
                  cpu: "250m"
                  memory: "256Mi"
          restartPolicy: OnFailure
          securityContext:
            runAsNonRoot: true
            runAsUser: 12345
            runAsGroup: 12345
